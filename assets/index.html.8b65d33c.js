import{_ as o,r as i,o as l,c,b as n,a as e,e as t,d as s}from"./app.5d2a72b5.js";const r={},p=t(`<h1 id="languages" tabindex="-1"><a class="header-anchor" href="#languages" aria-hidden="true">#</a> Languages</h1><p><code>zxcvbn-ts</code> is available for multiple languages. If your language is not supported you can set the options by yourself.</p><p>Current supported languages:</p><ul><li>German</li><li>English</li><li>Spain (Spain)</li><li>Finnish</li><li>French</li><li>Indonesia</li><li>Italian</li><li>Japanese</li><li>Dutch (Belgium)</li><li>Polish</li><li>Portuguese (Brazilian)</li></ul><h2 id="feedback" tabindex="-1"><a class="header-anchor" href="#feedback" aria-hidden="true">#</a> Feedback</h2><p>By default, <code>zxcvbn-ts</code> uses <code>keys</code> as feedback. This way you can integrate <code>zxcvbn-ts</code> into your own translation system. If you don&#39;t have an own translation system or want to use predefined translation you can use one of the language packs. Each language pack has its own translation file that you can use like this:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> zxcvbn<span class="token punctuation">,</span> zxcvbnOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@zxcvbn-ts/core&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> translations <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@zxcvbn-ts/language-en&#39;</span>

<span class="token keyword">const</span> password <span class="token operator">=</span> <span class="token string">&#39;somePassword&#39;</span>
<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
  translations<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

zxcvbnOptions<span class="token punctuation">.</span><span class="token function">setOptions</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>

<span class="token function">zxcvbn</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dictionary" tabindex="-1"><a class="header-anchor" href="#dictionary" aria-hidden="true">#</a> Dictionary</h2><p>By default, <code>zxcvbn-ts</code> doesn&#39;t use any dictionaries to let the developer decide how much of the library will be used. This makes the library tiny but inefficient compared to the original library. It is recommended to use at least the common and english language package.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> zxcvbn<span class="token punctuation">,</span> zxcvbnOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@zxcvbn-ts/core&#39;</span>
<span class="token keyword">import</span> zxcvbnCommonPackage <span class="token keyword">from</span> <span class="token string">&#39;@zxcvbn-ts/language-common&#39;</span>
<span class="token keyword">import</span> zxcvbnEnPackage <span class="token keyword">from</span> <span class="token string">&#39;@zxcvbn-ts/language-en&#39;</span>

<span class="token keyword">const</span> password <span class="token operator">=</span> <span class="token string">&#39;somePassword&#39;</span>
<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">dictionary</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>zxcvbnCommonPackage<span class="token punctuation">.</span>dictionary<span class="token punctuation">,</span>
    <span class="token operator">...</span>zxcvbnEnPackage<span class="token punctuation">.</span>dictionary<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

zxcvbnOptions<span class="token punctuation">.</span><span class="token function">setOptions</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>

<span class="token function">zxcvbn</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="keyboard-patterns" tabindex="-1"><a class="header-anchor" href="#keyboard-patterns" aria-hidden="true">#</a> Keyboard patterns</h2><p>By default, <code>zxcvbn-ts</code> don&#39;t use any keyboard patterns to let the developer decided how much of the library will be used. It is recommended to use at least the common keyboard patterns.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> zxcvbn<span class="token punctuation">,</span> zxcvbnOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@zxcvbn-ts/core&#39;</span>
<span class="token keyword">import</span> zxcvbnCommonPackage <span class="token keyword">from</span> <span class="token string">&#39;@zxcvbn-ts/language-common&#39;</span>

<span class="token keyword">const</span> password <span class="token operator">=</span> <span class="token string">&#39;somePassword&#39;</span>
<span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">graphs</span><span class="token operator">:</span> zxcvbnCommonPackage<span class="token punctuation">.</span>adjacencyGraphs<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

zxcvbnOptions<span class="token punctuation">.</span><span class="token function">setOptions</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>

<span class="token function">zxcvbn</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="add-a-new-language-package" tabindex="-1"><a class="header-anchor" href="#add-a-new-language-package" aria-hidden="true">#</a> Add a new language package</h2><p>To add a missing language package you need to do the following things:</p><ul><li>Clone the repo.</li><li>Install dependencies with <code>yarn install</code>.</li><li>Create a new language package inside the <code>packages/languages</code> directory. You need following file structure:</li></ul><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token punctuation">-</span> src
  <span class="token punctuation">-</span> translations.ts
<span class="token punctuation">-</span> package.json
<span class="token punctuation">-</span> README.md
<span class="token punctuation">-</span> tsconfig.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),d=n("li",null,[n("p",null,[s("Fill "),n("code",null,"src/translations.ts"),s(" with translations for your language.")])],-1),u=n("li",null,[n("p",null,[s("Adjust "),n("code",null,"README.md"),s(" file as appropriate.")])],-1),v=s("Find some reliable sources for some dictionaries. As a minimum, you need to have a source for "),k=n("code",null,"firstname",-1),m=s(", "),h=n("code",null,"lastname",-1),g=s(" and "),b=n("code",null,"commonWords",-1),y=s(". For common words you can check out "),_={href:"https://github.com/hermitdave/FrequencyWords",target:"_blank",rel:"noopener noreferrer"},w=s("https://github.com/hermitdave/FrequencyWords"),x=s(" - there are a lot of languages available."),f=t(`<li><p>Add your language and sources to the generator list in <code>./data-scripts/lists.ts</code>.</p><p>There is a default generator that takes simple lists that have only single words per line and can have occurrences of that word with a space separator. For example something like this:</p><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code>John
Debra
Billy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>or:</p><div class="language-txt ext-txt line-numbers-mode"><pre class="language-txt"><code>you 23123
i 12345
the 234
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If your list is more complex you need to write your own generator like the <a href="./data-scripts/_generators/PasswordGenerator.ts">password generator</a> or the <a href="./data-scripts/_generators/KeyboardAdjacencyGraph.ts">keyboard generator</a></p></li><li><p>Run <code>yarn generate:languageData</code>. This will generate the JSON files and <code>index.ts</code>.</p></li><li><p>During debugging, it might be easy to only generate the language files for one language, use <code>yarn generate:languageData nl-be</code> for example.</p></li><li><p>Create a pull request to the master branch.</p></li>`,4),z=n("p",null,[n("em",null,"(Optional)"),s(" Use the Wikipedia extractor; one of the maintainers can do this but this will increase the time until it is merged.")],-1),j=s("Get the wikipedia dump for your language from "),E={href:"https://dumps.wikimedia.org/XXwiki/latest/XXwiki-latest-pages-articles.xml.bz2",target:"_blank",rel:"noopener noreferrer"},P=s("https://dumps.wikimedia.org/XXwiki/latest/XXwiki-latest-pages-articles.xml.bz2"),X=s(" where "),I=n("code",null,"XX",-1),O=s(" is your language like "),C=n("code",null,"en",-1),B=s(" or "),F=n("code",null,"de",-1),D=s("."),A=s("Install "),T={href:"https://github.com/attardi/wikiextractor",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"wikiextractor",-1),N=s(": "),R=n("code",null,"pip install wikiextractor",-1),L=s(". Currently, with v3.0.4 it only works correctly on Linux."),S=t(`<li><p>Run <code>wikiextractor</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>wikiextractor --no-templates -o data-scripts/wikiExtractor/extracts XXwiki-latest-pages-articles.xml.bz2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Run <code>yarn run wikipediaExtractor</code> to generate <code>wikipedia.json</code> from all the files inside the <code>extracts</code> folder.</p></li><li><p>Move <code>wikipedia.json</code> into your language package.</p></li>`,3);function V(W,q){const a=i("ExternalLinkIcon");return l(),c("div",null,[p,n("ul",null,[d,u,n("li",null,[n("p",null,[v,k,m,h,g,b,y,n("a",_,[w,e(a)]),x])]),f,n("li",null,[z,n("ul",null,[n("li",null,[n("p",null,[j,n("a",E,[P,e(a)]),X,I,O,C,B,F,D])]),n("li",null,[n("p",null,[A,n("a",T,[G,e(a)]),N,R,L])]),S])])])])}var M=o(r,[["render",V],["__file","index.html.vue"]]);export{M as default};
